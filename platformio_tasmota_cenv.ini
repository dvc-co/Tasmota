[tasmota]
; Reset global build / unbuild compile time flags for ALL Tasmota / Tasmota32 [env]
; since custom env are designed to enable options individual
build_unflags               =
build_flags                 =

[env:tasmota-rangeextender]
build_flags                 = ${env.build_flags}
                              -DFIRMWARE_RANGE_EXTENDER
                              -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
                              -DUSE_WIFI_RANGE_EXTENDER
                              -DUSE_WIFI_RANGE_EXTENDER_NAPT
                              -DOTA_URL='""'

[env:tasmota32-rangeextender]
extends                     = env:tasmota32_base
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_TASMOTA32
                              -DUSE_WIFI_RANGE_EXTENDER
                              -DUSE_WIFI_RANGE_EXTENDER_NAPT
                              -DOTA_URL='""'

; remove PSRAM support -> avoid "blinking" of GPIO 16/17 at boot
[env:tasmota32-nopsram]
extends                     = env:tasmota32
build_unflags               = ${env:tasmota32_base.build_unflags}
                              -DBOARD_HAS_PSRAM
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_TASMOTA32
                              -DDISABLE_PSRAMCHECK
                              -DCODE_IMAGE_STR='"tasmota32-nopsram"'
                              -DOTA_URL='""'

[env:tasmota32s3-file]
extends                     = env:tasmota32_base
board                       = esp32s3-qio_qspi
board_build.f_cpu           = 240000000L
board_build.f_flash         = 80000000L
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_TASMOTA32
                              -DOTA_URL='"http://ota.tasmota.com/tasmota32/release/tasmota32s3.bin"'
; Example for custom file upload in Tasmota Filesystem
custom_files_upload         = ${env:tasmota32_base.custom_files_upload}
                              tasmota/berry/modules/Partition_Wizard.tapp
                              https://github.com/tasmota/autoconf/raw/main/esp32s3/DevKitC-1.autoconf

[env:tasmota32s3-qio_opi-all]
extends                     = env:tasmota32_base
board                       = esp32s3-qio_opi
board_build.f_cpu           = 240000000L
board_build.f_flash         = 80000000L
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DUSE_WEBCAM
                              -DUSE_BERRY_ULP
                              -DFIRMWARE_LVGL
                              -DUSE_LVGL_OPENHASP
                              -DOTA_URL='""'

[env:tasmota32s3-qio_opi_120]
; device needs >= 8MB Flash!!
extends                     = env:tasmota32_base
board                       = esp32s3-qio_opi_120
board_build.partitions      = partitions/esp32_partition_app3904k_fs3392k.csv
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DUSE_BERRY_ULP
                              -DFIRMWARE_LVGL
                              -DUSE_LVGL_OPENHASP
                              -DOTA_URL='""'

[env:tasmota32-WPA3_SAE]
; Arduino libs with WiFi Enterprise support
extends                     = env:tasmota32_base
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_TASMOTA32
                              -DOTA_URL='""'
lib_ignore                  = Micro-RTSP
custom_sdkconfig            = CONFIG_ESP_WIFI_ENTERPRISE_SUPPORT=y
                              CONFIG_ESP_WIFI_ENABLE_WPA3_SAE=y
                              CONFIG_ESP_WIFI_ENABLE_WPA3_OWE_STA=y

                              #
                              # mbedTLS
                              #
                              CONFIG_MBEDTLS_INTERNAL_MEM_ALLOC=y
                              # CONFIG_MBEDTLS_EXTERNAL_MEM_ALLOC is not set
                              # CONFIG_MBEDTLS_DEFAULT_MEM_ALLOC is not set
                              # CONFIG_MBEDTLS_CUSTOM_MEM_ALLOC is not set
                              CONFIG_MBEDTLS_SSL_MAX_CONTENT_LEN=16384
                              # CONFIG_MBEDTLS_ASYMMETRIC_CONTENT_LEN is not set
                              # CONFIG_MBEDTLS_DEBUG is not set

                              #
                              # mbedTLS v3.x related
                              #
                              # CONFIG_MBEDTLS_SSL_PROTO_TLS1_3 is not set
                              # CONFIG_MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH is not set
                              # CONFIG_MBEDTLS_X509_TRUSTED_CERT_CALLBACK is not set
                              # CONFIG_MBEDTLS_SSL_CONTEXT_SERIALIZATION is not set
                              CONFIG_MBEDTLS_SSL_KEEP_PEER_CERTIFICATE=y
                              CONFIG_MBEDTLS_PKCS7_C=y

                              #
                              # DTLS-based configurations
                              #
                              # CONFIG_MBEDTLS_SSL_DTLS_CONNECTION_ID is not set
                              # CONFIG_MBEDTLS_SSL_DTLS_SRTP is not set
                              # end of DTLS-based configurations
                              # end of mbedTLS v3.x related

                              #
                              # Certificate Bundle
                              #
                              CONFIG_MBEDTLS_CERTIFICATE_BUNDLE=y
                              CONFIG_MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_FULL=y
                              # CONFIG_MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_CMN is not set
                              # CONFIG_MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_NONE is not set
                              # CONFIG_MBEDTLS_CUSTOM_CERTIFICATE_BUNDLE is not set
                              CONFIG_MBEDTLS_CERTIFICATE_BUNDLE_MAX_CERTS=200
                              # end of Certificate Bundle

                              # CONFIG_MBEDTLS_ECP_RESTARTABLE is not set
                              CONFIG_MBEDTLS_CMAC_C=y
                              CONFIG_MBEDTLS_HARDWARE_AES=y
                              CONFIG_MBEDTLS_GCM_SUPPORT_NON_AES_CIPHER=y
                              CONFIG_MBEDTLS_HARDWARE_MPI=y
                              # CONFIG_MBEDTLS_LARGE_KEY_SOFTWARE_MPI is not set
                              CONFIG_MBEDTLS_HARDWARE_SHA=y
                              CONFIG_MBEDTLS_ROM_MD5=y
                              # CONFIG_MBEDTLS_ATCA_HW_ECDSA_SIGN is not set
                              # CONFIG_MBEDTLS_ATCA_HW_ECDSA_VERIFY is not set
                              CONFIG_MBEDTLS_HAVE_TIME=y
                              # CONFIG_MBEDTLS_PLATFORM_TIME_ALT is not set
                              # CONFIG_MBEDTLS_HAVE_TIME_DATE is not set
                              CONFIG_MBEDTLS_ECDSA_DETERMINISTIC=y
                              CONFIG_MBEDTLS_SHA512_C=y
                              CONFIG_MBEDTLS_TLS_SERVER_AND_CLIENT=y
                              # CONFIG_MBEDTLS_TLS_SERVER_ONLY is not set
                              # CONFIG_MBEDTLS_TLS_CLIENT_ONLY is not set
                              # CONFIG_MBEDTLS_TLS_DISABLED is not set
                              CONFIG_MBEDTLS_TLS_SERVER=y
                              CONFIG_MBEDTLS_TLS_CLIENT=y
                              CONFIG_MBEDTLS_TLS_ENABLED=y

                              #
                              # TLS Key Exchange Methods
                              #
                              CONFIG_MBEDTLS_PSK_MODES=y
                              CONFIG_MBEDTLS_KEY_EXCHANGE_PSK=y
                              CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_PSK=y
                              CONFIG_MBEDTLS_KEY_EXCHANGE_RSA_PSK=y
                              CONFIG_MBEDTLS_KEY_EXCHANGE_RSA=y
                              CONFIG_MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE=y
                              CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_RSA=y
                              CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA=y
                              CONFIG_MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA=y
                              CONFIG_MBEDTLS_KEY_EXCHANGE_ECDH_RSA=y
                              # end of TLS Key Exchange Methods

                              CONFIG_MBEDTLS_SSL_RENEGOTIATION=y
                              CONFIG_MBEDTLS_SSL_PROTO_TLS1_2=y
                              # CONFIG_MBEDTLS_SSL_PROTO_GMTSSL1_1 is not set
                              CONFIG_MBEDTLS_SSL_PROTO_DTLS=y
                              CONFIG_MBEDTLS_SSL_ALPN=y
                              CONFIG_MBEDTLS_CLIENT_SSL_SESSION_TICKETS=y
                              CONFIG_MBEDTLS_SERVER_SSL_SESSION_TICKETS=y

                              #
                              # Symmetric Ciphers
                              #
                              CONFIG_MBEDTLS_AES_C=y
                              CONFIG_MBEDTLS_CAMELLIA_C=y
                              # CONFIG_MBEDTLS_DES_C is not set
                              # CONFIG_MBEDTLS_BLOWFISH_C is not set
                              # CONFIG_MBEDTLS_XTEA_C is not set
                              CONFIG_MBEDTLS_CCM_C=y
                              CONFIG_MBEDTLS_GCM_C=y
                              # CONFIG_MBEDTLS_NIST_KW_C is not set
                              # end of Symmetric Ciphers

                              # CONFIG_MBEDTLS_RIPEMD160_C is not set

                              #
                              # Certificates
                              #
                              CONFIG_MBEDTLS_PEM_PARSE_C=y
                              CONFIG_MBEDTLS_PEM_WRITE_C=y
                              CONFIG_MBEDTLS_X509_CRL_PARSE_C=y
                              CONFIG_MBEDTLS_X509_CSR_PARSE_C=y
                              # end of Certificates

                              CONFIG_MBEDTLS_ECP_C=y
                              # CONFIG_MBEDTLS_DHM_C is not set
                              CONFIG_MBEDTLS_ECDH_C=y
                              CONFIG_MBEDTLS_ECDSA_C=y
                              # CONFIG_MBEDTLS_ECJPAKE_C is not set
                              CONFIG_MBEDTLS_ECP_DP_SECP192R1_ENABLED=y
                              CONFIG_MBEDTLS_ECP_DP_SECP224R1_ENABLED=y
                              CONFIG_MBEDTLS_ECP_DP_SECP256R1_ENABLED=y
                              CONFIG_MBEDTLS_ECP_DP_SECP384R1_ENABLED=y
                              CONFIG_MBEDTLS_ECP_DP_SECP521R1_ENABLED=y
                              CONFIG_MBEDTLS_ECP_DP_SECP192K1_ENABLED=y
                              CONFIG_MBEDTLS_ECP_DP_SECP224K1_ENABLED=y
                              CONFIG_MBEDTLS_ECP_DP_SECP256K1_ENABLED=y
                              CONFIG_MBEDTLS_ECP_DP_BP256R1_ENABLED=y
                              CONFIG_MBEDTLS_ECP_DP_BP384R1_ENABLED=y
                              CONFIG_MBEDTLS_ECP_DP_BP512R1_ENABLED=y
                              CONFIG_MBEDTLS_ECP_DP_CURVE25519_ENABLED=y
                              CONFIG_MBEDTLS_ECP_NIST_OPTIM=y
                              CONFIG_MBEDTLS_ECP_FIXED_POINT_OPTIM=y
                              # CONFIG_MBEDTLS_POLY1305_C is not set
                              # CONFIG_MBEDTLS_CHACHA20_C is not set
                              # CONFIG_MBEDTLS_HKDF_C is not set
                              # CONFIG_MBEDTLS_THREADING_C is not set
                              CONFIG_MBEDTLS_ERROR_STRINGS=y
                              # end of mbedTLS

[env:tasmota32s3-opi_opi]
extends                     = env:tasmota32_base
board                       = esp32s3-opi_opi
board_build.f_cpu           = 240000000L
board_build.f_flash         = 80000000L
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DUSE_BERRY_ULP
                              -DFIRMWARE_LVGL
                              -DUSE_LVGL_OPENHASP
                              -DOTA_URL='""'

[env:tasmota32c3-bluetooth]
extends                     = env:tasmota32_base
board                       = esp32c3
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_BLUETOOTH
;                              -DUSE_EQ3_ESP32
                              -DOTA_URL='""'
lib_extra_dirs              = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display, lib/lib_audio
lib_ignore                  = Micro-RTSP

[env:tasmota32s3-bluetooth]
extends                     = env:tasmota32_base
board                       = esp32s3-qio_qspi
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_BLUETOOTH
                              -DOTA_URL='""'
lib_extra_dirs              = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_ssl, lib/lib_i2c
lib_ignore                  = Micro-RTSP

[env:tasmota32-mi32]
extends                     = env:tasmota32_base
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_BLUETOOTH
                              -DUSE_MI_EXT_GUI
                              -DCONFIG_BT_NIMBLE_NVS_PERSIST=y
                              -DOTA_URL='""'
lib_extra_dirs              = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_i2c, lib/lib_div, lib/lib_ssl
lib_ignore                  = Micro-RTSP

[env:tasmota32c3-mi32]
extends                     = env:tasmota32_base
board                       = esp32c3
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_BLUETOOTH
                              -DUSE_MI_EXT_GUI
                              -DCONFIG_BT_NIMBLE_NVS_PERSIST=y
                              -DOTA_URL='""'
lib_extra_dirs              = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_i2c, lib/lib_div, lib/lib_ssl
lib_ignore                  = Micro-RTSP

[env:tasmota32s3-mi32]
extends                     = env:tasmota32_base
board                       = esp32s3-qio_qspi
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_BLUETOOTH
                              -DUSE_MI_EXT_GUI
                              -DCONFIG_BT_NIMBLE_NVS_PERSIST=y
                              -DOTA_URL='""'
lib_extra_dirs              = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_i2c, lib/lib_div, lib/lib_ssl
lib_ignore                  = Micro-RTSP

[env:tasmota32c6-mi32]
extends                     = env:tasmota32_base
board                       = esp32c6
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_BLUETOOTH
                              -DUSE_MI_EXT_GUI
                              -DCONFIG_BT_NIMBLE_NVS_PERSIST=y
                              -DOTA_URL='""'

; *** Debug version used for PlatformIO Home Project Inspection
[env:tasmota-debug]
build_type                  = debug
build_unflags               = ${env.build_unflags}
check_tool                  = cppcheck
                              ;clangtidy
check_skip_packages         = yes
build_flags                 = ${env.build_flags}
;                              -Wstack-usage=300
                              -DOTA_URL='""'

[env:tasmota32-debug]
extends                     = env:tasmota32_base
build_type                  = debug
build_unflags               = ${env:tasmota32_base.build_unflags}
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DOTA_URL='""'
check_tool                  = cppcheck
                              ;clangtidy
check_skip_packages         = yes


; *** JTAG Debug version, needs esp-prog or FT2232H or FT232H
; *** Install howto for Windows https://community.platformio.org/t/esp32-pio-unified-debugger/4541/20

[env:tasmota32-ocd]
build_type                  = debug
extends                     = env:tasmota32_base
board                       = esp32
debug_tool                  = esp-prog
upload_protocol             = esp-prog
debug_init_break            = tbreak setup
build_unflags               = ${env:tasmota32_base.build_unflags}
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DOTA_URL='""'

[env:tasmota32solo1-ocd]
build_type                  = debug
extends                     = env:tasmota32solo1
board                       = esp32-solo1
debug_tool                  = esp-prog
upload_protocol             = esp-prog
debug_init_break            = tbreak setup
build_unflags               = ${env:tasmota32_base.build_unflags}
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DOTA_URL='""'
custom_sdkconfig            = CONFIG_FREERTOS_UNICORE=y

[env:tasmota32s2-ocd]
build_type                  = debug
extends                     = env:tasmota32_base
board                       = esp32s2
debug_tool                  = esp-prog
upload_protocol             = esp-prog
debug_init_break            = tbreak setup
build_unflags               = ${env:tasmota32_base.build_unflags}
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DOTA_URL='""'

; *** JTAG Debug versions (only C3/S3), uses inbuilt CDC/jtag. No extra jtag hardware required!

[env:tasmota32s3-ocd]
build_type                  = debug
extends                     = env:tasmota32s3
board                       = esp32s3-qio_opi
debug_tool                  = esp-builtin
upload_protocol             = esp-builtin
debug_init_break            = tbreak setup
build_unflags               = ${env:tasmota32_base.build_unflags}
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DOTA_URL='""'

[env:tasmota32c3-ocd]
build_type                  = debug
extends                     = env:tasmota32c3
board                       = esp32c3
debug_tool                  = esp-builtin
upload_protocol             = esp-builtin
debug_init_break            = tbreak setup
build_unflags               = ${env:tasmota32c3.build_unflags}
build_flags                 = ${env:tasmota32c3.build_flags}
                              -DOTA_URL='""'
